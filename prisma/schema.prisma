generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        Int       @id @default(autoincrement())
  playerid  Int
  comment   String
  createdat DateTime? @default(now()) @db.Timestamp(6)
  updatedat DateTime? @default(now()) @db.Timestamp(6)
  player    player    @relation(fields: [playerid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_player_comment")
}

model game {
  id        Int       @id @default(autoincrement())
  playerid  Int
  score     Int
  levelid   Int
  createdat DateTime? @default(now()) @db.Timestamp(6)
  updatedat DateTime? @default(now()) @db.Timestamp(6)
  level     level     @relation(fields: [levelid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_level")
  player    player    @relation(fields: [playerid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_player")
}

model level {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  difficulty String    @db.VarChar(255)
  createdat  DateTime? @default(now()) @db.Timestamp(6)
  updatedat  DateTime? @default(now()) @db.Timestamp(6)
  game       game[]
}

model player {
  id        Int       @id @default(autoincrement())
  firstname String    @db.VarChar(500)
  lastname  String    @db.VarChar(500)
  username  String    @unique @db.VarChar(255)
  password  String    @db.VarChar(500)
  gender    String    @db.VarChar(10)
  createdat DateTime? @default(now()) @db.Timestamp(6)
  updatedat DateTime? @default(now()) @db.Timestamp(6)
  Comment   Comment[]
  game      game[]
  ranking   ranking[]
}

model ranking {
  id        Int       @id @default(autoincrement())
  playerid  Int
  scores    Int
  rank      String    @db.VarChar(255)
  createdat DateTime? @default(now()) @db.Timestamp(6)
  updatedat DateTime? @default(now()) @db.Timestamp(6)
  player    player    @relation(fields: [playerid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_player_ranking")
}
